# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  PROJECT_ID: fake-app-323017
  REGION: northamerica-northeast1
  GAR_LOCATION: northamerica-northeast1-docker.pkg.dev/fake-app-323017/repo-1/


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: "Checkout"
      uses: "actions/checkout@v3"

    - id: "auth"
      uses: "google-github-actions/auth@v1"
      with:
           credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Use gcloud CLI"
      run: "gcloud info"

    - name: "Docker auth"
      run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

    - name: Build image
      run: docker build . --file DOCKERFILE_LOCATION --tag ${{ env.GAR_LOCATION }}
      working-directory: WORKING_DIRECTORY

    - name: Push image
      run: docker push ${{ env.GAR_LOCATION }}

    
    

   
